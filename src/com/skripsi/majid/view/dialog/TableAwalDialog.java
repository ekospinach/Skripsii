/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.skripsi.majid.view.dialog;

import com.skripsi.majid.db.DBConnection;
import com.skripsi.majid.entity.*;
import com.skripsi.majid.service.PemilikService;
import com.skripsi.majid.service.SapiService;
import com.skripsi.majid.service.TableAwalService;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author majid
 */
public class TableAwalDialog extends javax.swing.JDialog {

    /**
     * Creates new form TableAwalDialog
     */
    String status = "";
    private List<SapiTerpilih> sapiTerpilihRecords = new ArrayList<SapiTerpilih>();
    DBConnection conn = DBConnection.getInstance();

    public TableAwalDialog() {
        setModal(true);
        initComponents();
        loadRecords();
    }

    public void muncul() {
        setTitle("Table Awal");
        setLocationRelativeTo(this);
        setVisible(true);
    }

    public void loadRecords() {
        try {
            SapiService service = new SapiService(conn.getCon());
            sapiTerpilihRecords = service.getAllSapiTerpilih();
            this.setFillTable();
        } catch (SQLException ex) {
            Logger.getLogger(TableAwalDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setFillTable() {
        Object data[][] = new Object[sapiTerpilihRecords.size()][7];
        int x = 0;
        for (SapiTerpilih sapiTerpilih : sapiTerpilihRecords) {
            data[x][0] = sapiTerpilih.getId();
            data[x][1] = sapiTerpilih.getSapiid();
            data[x][2] = sapiTerpilih.getUmur();
            data[x][3] = sapiTerpilih.getBerat();
            data[x][4] = sapiTerpilih.getKesehatan();
            data[x][5] = sapiTerpilih.getJk();
            ++x;
        }
        String[] judul = {"Id", "Sapi Id", "Umur", "Berat", "Kesehatan", "Jenis Kelamin"};
        jTableTableAwal.setModel(new DefaultTableModel(data, judul));
        jScrollPane1.setViewportView(jTableTableAwal);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTableAwal = new javax.swing.JTable();
        jButtonNext = new javax.swing.JButton();
        jButtonHitung = new javax.swing.JButton();
        jButtonKembali = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldBudget = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("TableAwal"));

        jScrollPane1.setViewportView(jTableTableAwal);

        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/skripsi/majid/resource/nextbutton.png"))); // NOI18N
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonNext, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonNext)
                .addGap(5, 5, 5))
        );

        jButtonHitung.setText("Hitung");
        jButtonHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHitungActionPerformed(evt);
            }
        });

        jButtonKembali.setText("Kembali");
        jButtonKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKembaliActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("TableAwal");

        jTextFieldSearch.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/skripsi/majid/resource/searchbutton.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6))
                    .addComponent(jLabel2))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLabel1.setText("Masukkan Budget Yang Disediakan : Rp");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addComponent(jButtonHitung, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addComponent(jButtonKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldBudget, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldBudget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonHitung)
                    .addComponent(jButtonKembali))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKembaliActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonKembaliActionPerformed

    private void Search(JTable jt, String keyword) {
        TableModel tm = jt.getModel();
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tm);
        sorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
        jt.setRowSorter(sorter);
    }

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        try {
            Search(jTableTableAwal, jTextFieldSearch.getText());
        } catch (PatternSyntaxException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jButtonHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHitungActionPerformed

        if (jTextFieldBudget.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Harap Diisi budget yang tersedia!!!!");
        } else {
            try {
                conn.getCon().setAutoCommit(false);
                SapiService serviceSapi = new SapiService(conn.getCon());
                TableAwalService serviceTableAwal = new TableAwalService(conn.getCon());

                TableAwal ta = new TableAwal();
                NilaiVa va = new NilaiVa();
                NilaiVbCiCr vbCiCr = new NilaiVbCiCr();
                Unweight unweight = new Unweight();
                Weight weight = new Weight();
                LimitingSuperMatriks lsm = new LimitingSuperMatriks();

                sapiTerpilihRecords = serviceSapi.getAllSapiTerpilih();
                int n = serviceSapi.getMaxSapiTerpilih();
                float jmlUmur = serviceSapi.jumlahUmurTerpilih();
                float jmlBerat = serviceSapi.jumlahBeratTerpilih();
                float jmlKesehatan = serviceSapi.jumlahKesehatanTerpilih();
                float jmlJk = serviceSapi.jumlahJkTerpilih();
                float hargaperkg = (float) serviceTableAwal.getHarga();

                List<TableAwal> list = new ArrayList<TableAwal>();
                for (SapiTerpilih sapiTerpilih : sapiTerpilihRecords) {
                    int tawalId = sapiTerpilih.getSapiid();
                    float tawalUmur = sapiTerpilih.getUmur() / jmlUmur;
                    float tawalBerat = sapiTerpilih.getBerat() / jmlBerat;
                    float tawalKesehatan = sapiTerpilih.getKesehatan() / jmlKesehatan;
                    float tawalJk = sapiTerpilih.getJk() / jmlJk;
                    float tawalJumlah = tawalUmur + tawalBerat + tawalKesehatan + tawalJk;
                    float prioritas = tawalJumlah / n;

                    float beratSapiID = serviceSapi.getBeratSapi(tawalId);
                    System.out.println("---------------------------------------------------" + tawalId);
                    System.out.println("berat sapi ID = "+beratSapiID);
                    System.out.println("pembobotan kriteria = nilai inputan/jml inputan");
                    System.out.println(sapiTerpilih.getUmur() + "/" + jmlUmur + "=" + tawalUmur);
                    System.out.println(sapiTerpilih.getBerat() + "/" + jmlBerat + "=" + tawalBerat);
                    System.out.println(sapiTerpilih.getKesehatan() + "/" + jmlKesehatan + "=" + tawalKesehatan);
                    System.out.println(sapiTerpilih.getJk() + "/" + jmlJk + "=" + tawalJk);
                    System.out.println("jumlah = " + tawalJumlah);
                    System.out.println("prioritas = jumlah/n = " + prioritas);

                    ta.setSapiId(tawalId);
                    ta.setUmur(tawalUmur);
                    ta.setBerat(tawalBerat);
                    ta.setKesehatan(tawalKesehatan);
                    ta.setJk(sapiTerpilih.getJk() / jmlJk);
                    ta.setJumlah(tawalJumlah);
                    ta.setPrioritas(prioritas);
                    serviceSapi.insertTawal(ta);
                    ///////////////////////VA////////////////////
                    float vaUmur = tawalUmur * sapiTerpilih.getUmur();
                    float vaBerat = tawalBerat * sapiTerpilih.getBerat();
                    float vaKesehatan = tawalKesehatan * sapiTerpilih.getKesehatan();
                    float vaJk = tawalJk * sapiTerpilih.getJk();

                    System.out.println("---------------------------------------------------" + tawalId);
                    System.out.println("nilai va = pembobotan kriteria * nilai inputan");
                    System.out.println(tawalUmur + "*" + sapiTerpilih.getUmur() + "=" + vaUmur);
                    System.out.println(tawalBerat + "*" + sapiTerpilih.getBerat() + "=" + vaBerat);
                    System.out.println(tawalKesehatan + "*" + sapiTerpilih.getKesehatan() + "=" + vaKesehatan);
                    System.out.println(tawalJk + "*" + sapiTerpilih.getJk() + "=" + vaJk);

                    va.setSapiId(tawalId);
                    va.setUmur(vaUmur);
                    va.setBerat(vaBerat);
                    va.setKesehatan(vaKesehatan);
                    va.setJk(vaJk);
                    serviceTableAwal.insertVa(va);
                    ///////////////////////VB////////////////////
                    float vbUmur = vaUmur / prioritas;
                    float vbBerat = vaBerat / prioritas;
                    float vbKesehatan = vaKesehatan / prioritas;
                    float vbJk = vaJk / prioritas;
                    float vbJumlah = vbUmur + vbBerat + vbKesehatan + vbJk;
                    float ci = (vbJumlah - n) / (n - 1) / 100;
                    float cr = 0;
                    //float cr = ci / 0.9F;

                    System.out.println("---------------------------------------------------" + tawalId);
                    System.out.println("nilai vb = va/prioritas");
                    System.out.println(vaUmur + "/" + prioritas + "=" + vbUmur);
                    System.out.println(vaBerat + "/" + prioritas + "=" + vbBerat);
                    System.out.println(vaKesehatan + "/" + prioritas + "=" + vbKesehatan);
                    System.out.println(vaJk + "/" + prioritas + "=" + vbJk);
                    System.out.println("jumlah = " + vbJumlah);
                    System.out.println("ci = (jumlah-n)/(n-1)/100");
                    System.out.println("ci = " + ci);
                    System.out.println("cr = ci/ir" + "   ir =0.9");
                    System.out.println("cr = " + cr);

                    if (n == 1) {
                        JOptionPane.showMessageDialog(this, "Maaf jumlah sapi yang dibandingkan harus lebih dari 2");
                        dispose();
                    } else if (n == 2) {
                        JOptionPane.showMessageDialog(this, "Maaf jumlah sapi yang dibandingkan harus lebih dari 2");
                        dispose();
                    } else if (n == 3) {
                        cr = ci / 0.58F;
                    } else if (n == 4) {
                        cr = ci / 0.9F;
                    } else if (n == 5) {
                        cr = ci / 1.12F;
                    } else if (n == 6) {
                        cr = ci / 1.24F;
                    } else if (n == 7) {
                        cr = ci / 1.32F;
                    } else if (n == 8) {
                        cr = ci / 1.41F;
                    } else if (n == 9) {
                        cr = ci / 1.45F;
                    } else if (n == 10) {
                        cr = ci / 1.49F;
                    }

                    vbCiCr.setSapiId(tawalId);
                    vbCiCr.setUmur(vbUmur);
                    vbCiCr.setBerat(vbBerat);
                    vbCiCr.setKesehatan(vbKesehatan);
                    vbCiCr.setJk(vbJk);
                    vbCiCr.setJumlah(vbJumlah);
                    vbCiCr.setCi(ci);
                    vbCiCr.setCr(cr);
                    serviceTableAwal.insertVbCiCr(vbCiCr);
                    ///////////////////////Unweight////////////////////
                    float unweightUmur = vaUmur * sapiTerpilih.getUmur();
                    float unweightBerat = vaBerat * sapiTerpilih.getBerat();
                    float unweightKesehatan = vaKesehatan * sapiTerpilih.getKesehatan();
                    float unweightJk = vaJk * sapiTerpilih.getJk();
                    float unweightJumlah = unweightUmur + unweightBerat + unweightKesehatan + unweightJk;

                    System.out.println("---------------------------------------------------" + tawalId);
                    System.out.println("nilai unweight = va * inputan");
                    System.out.println(vaUmur + "*" + sapiTerpilih.getUmur() + "=" + unweightUmur);
                    System.out.println(vaBerat + "*" + sapiTerpilih.getBerat() + "=" + unweightBerat);
                    System.out.println(vaKesehatan + "*" + sapiTerpilih.getKesehatan() + "=" + unweightKesehatan);
                    System.out.println(vaJk + "*" + sapiTerpilih.getJk() + "=" + unweightJk);

                    unweight.setSapiId(tawalId);
                    unweight.setUmur(unweightUmur);
                    unweight.setBerat(unweightBerat);
                    unweight.setKesehatan(unweightKesehatan);
                    unweight.setJk(unweightJk);
                    serviceTableAwal.insertUnweight(unweight);
                    ///////////////////////Weight////////////////////
                    float weightUmur = unweightUmur * sapiTerpilih.getUmur();
                    float weightBerat = unweightBerat * sapiTerpilih.getBerat();
                    float weightKesehatan = unweightKesehatan * sapiTerpilih.getKesehatan();
                    float weightJk = unweightJk * sapiTerpilih.getJk();
                    float weightJumlah = weightUmur + weightBerat + weightKesehatan + weightJk;

                    System.out.println("---------------------------------------------------" + tawalId);
                    System.out.println("nilai weight = unweight * inputan");
                    System.out.println(unweightUmur + "*" + sapiTerpilih.getUmur() + "=" + weightUmur);
                    System.out.println(unweightBerat + "*" + sapiTerpilih.getBerat() + "=" + weightBerat);
                    System.out.println(unweightKesehatan + "*" + sapiTerpilih.getKesehatan() + "=" + weightKesehatan);
                    System.out.println(unweightJk + "*" + sapiTerpilih.getJk() + "=" + weightJk);

                    weight.setSapiId(tawalId);
                    weight.setUmur(weightUmur);
                    weight.setBerat(weightBerat);
                    weight.setKesehatan(weightKesehatan);
                    weight.setJk(weightJk);
                    serviceTableAwal.insertWeight(weight);
                    ///////////////////////Limiting Super Matriks////////////////////
                    float jumlahTotal = unweightJumlah + weightJumlah;





                    ///////////////////////Harga////////////////////
                    float budget = Float.valueOf(jTextFieldBudget.getText());
                    float tawalHargaSapiTerpilih = beratSapiID * hargaperkg;
                    System.out.println("hargaperkg=" + hargaperkg);
                    System.out.println("beratsapitetrpilih=" + sapiTerpilih.getBerat());
                    System.out.println("budget=" + budget);
                    System.out.println("tawalsappitepilih=" + tawalHargaSapiTerpilih);

                    if (budget > tawalHargaSapiTerpilih && jumlahTotal > 50) {
                        status = "recommend";
                    } else {
                        status = "belum recommend";
                    }
                    ///////////////////////Harga////////////////////


                    System.out.println("---------------------------------------------------" + tawalId);
                    System.out.println("nilai limiting supermatriks = jumlah unweight + jumlah weight");
                    System.out.println(unweightJumlah + "+" + weightJumlah + "=" + jumlahTotal);
                    System.out.println(status);

//                    if (jumlahTotal > 200) {
//                        status = "Lolos";
//                    } else {
//                        status = "Belum";
//                    }

                    lsm.setSapiId(tawalId);
                    lsm.setTotalUnweight(unweightJumlah);
                    lsm.setTotalWeight(weightJumlah);
                    lsm.setJumlah(jumlahTotal);
                    lsm.setStatus(status);
                    serviceTableAwal.insertLimSupMatriks(lsm);
                }



                conn.getCon().commit();
                conn.getCon().setAutoCommit(true);
                JOptionPane.showMessageDialog(this, "Data Saved!");
            } catch (SQLException ex) {
                try {
                    conn.getCon().rollback();
                    conn.getCon().setAutoCommit(true);
                } catch (SQLException ex1) {
                    Logger.getLogger(TableAwalDialog.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }



        }
    }//GEN-LAST:event_jButtonHitungActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        // TODO add your handling code here:
        dispose();
        PembobotanDialog dialog = new PembobotanDialog();
        dialog.muncul();
    }//GEN-LAST:event_jButtonNextActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonHitung;
    private javax.swing.JButton jButtonKembali;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTableAwal;
    private javax.swing.JTextField jTextFieldBudget;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
